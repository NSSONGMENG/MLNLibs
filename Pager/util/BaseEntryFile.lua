---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by momo.
--- DateTime: 2019/5/23 下午4:20
---
--- 页面入口文件基类
---

--- 注意：使用此类后不要再次调用viewAppear和viewDisappear两个方法


local BaseEntryFile = require("util.BaseClass"):extend()

-- 对象初始化后自动调用该方法，可在方法中进行页面的初始化配置
function BaseEntryFile:_initConfig()
    window:viewAppear(function()
        if self.appearBlock then
            self.appearBlock()
        end

        self:_handleShowRecord()
    end)

    window:viewDisappear(function()
        if self.disappearBlock then
            self.disappearBlock()
        end

        self:_handleDismissRecord()
    end)
end

---
--- 设置生命周期回调
---@public
---@param appearBlock       fun()     页面将要显示回调
---@param disappearBlock    fun()     页面将要消失回调
function BaseEntryFile:lifeCircle(appearBlock, disappearBlock)
    self.appearBlock = appearBlock
    self.disappearBlock = disappearBlock

    return self
end


---
--- 设置PV打点参数
---@param require_id    string  必传 - 每一个埋点的需求ID，埋点变更或修复，需要更新ID。
---@param page          string  必传 - 页面名称
---@param args          table   扩展字段，默认为{}
---@param isContainer   boolean 必传 - 是否容器页面(包含子Controller)
---
function BaseEntryFile:initLogConfig(require_id, page, args, isContainer)
    if isContainer == nil then
        isContainer = false
    end

    self.pvParam = {
        require_id = require_id or "",
        page = page or "",
        is_back = false,
        is_container = isContainer,
        args = args or {},
    }

    return self
end

function BaseEntryFile:_handleShowRecord()
    -- pv页面显示打点
    if self.pvParam then
        print("page appear record")
        self.pvParam["page_id"] = self:createUDID()
        RecordUtils:handlePVEnter(self.pvParam)
        self.pvParam["is_back"] = true

        -- 记录页面显示时间
        self.pageShowTime = os.time() * 1000
    end
end

function BaseEntryFile:_handleDismissRecord()
    -- pv页面消失打点
    if self.pvParam then
        local current = os.time() * 1000

        local prm = {}
        for k, v in pairs(self.pvParam) do
            prm[k] = v
        end

        prm["duration"] = current - (self.pageShowTime or current)

        print("page disappear record")
        RecordUtils:handlePVExit(prm)
    end
end

function BaseEntryFile:createUDID()
    -- 14 - 10 - 8
    local str = tostring(self)
    local addr = string.sub(str, 8) -- 地址
    --RecordUtils.mmid = RecordUtils.mmid or MMUserProfile:getMmId()
    return addr .. "-" .. os.time() .. "-" .. os.clock() * 10000000
end

return BaseEntryFile